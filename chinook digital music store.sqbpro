<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/user/Downloads/chinook_db/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3954"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainInvoice"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="61"/><column index="2" value="300"/><column index="3" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Artist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="59"/><column index="2" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="83"/><column index="2" value="71"/><column index="3" value="83"/><column index="4" value="294"/><column index="5" value="264"/><column index="6" value="132"/><column index="7" value="44"/><column index="8" value="96"/><column index="9" value="80"/><column index="10" value="128"/><column index="11" value="122"/><column index="12" value="183"/><column index="13" value="98"/></column_widths><filter_values><column index="8" value="USA"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="82"/><column index="2" value="71"/><column index="3" value="71"/><column index="4" value="124"/><column index="5" value="75"/><column index="6" value="129"/><column index="7" value="129"/><column index="8" value="178"/><column index="9" value="67"/><column index="10" value="44"/><column index="11" value="60"/><column index="12" value="80"/><column index="13" value="115"/><column index="14" value="115"/><column index="15" value="168"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Genre" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="59"/><column index="2" value="112"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="9" mode="1"/></sort><column_widths><column index="1" value="68"/><column index="2" value="83"/><column index="3" value="129"/><column index="4" value="264"/><column index="5" value="132"/><column index="6" value="80"/><column index="7" value="96"/><column index="8" value="116"/><column index="9" value="40"/></column_widths><filter_values><column index="7" value="USA"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="InvoiceLine" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="94"/><column index="2" value="68"/><column index="3" value="56"/><column index="4" value="65"/><column index="5" value="64"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="MediaType" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="164"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Playlist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="67"/><column index="2" value="155"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PlaylistTrack" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="67"/><column index="2" value="56"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="60"/><column index="2" value="300"/><column index="3" value="61"/><column index="4" value="90"/><column index="5" value="59"/><column index="6" value="300"/><column index="7" value="84"/><column index="8" value="63"/><column index="9" value="65"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SCRIPT">/* ARTISTS AND TRACK OVERVIEW */

/* How many albums does each artist have, considering only those artists who have a number of albums greater than the average number of albums across all artists? */
WITH genre_table as
		              (SELECT ar.name name_of_artist, 
					          al.artistid artist_id, 
							  g.name Genre_name
					   FROM artist ar
					   LEFT JOIN Album al ON ar.artistid = al.artistid
					   LEFT JOIN track t ON al.albumid = t.AlbumId
					   LEFT JOIN Genre g ON t.genreid = g.genreid
					   GROUP BY name_of_artist),
					   
	average_album as (SELECT ar.Name Artist_name, 
	                         COUNT(al.title) no_of_albums
	                  FROM artist ar
					  LEFT JOIN album al ON ar.artistid = al.ArtistId
					  GROUP BY Artist_name)
					  
SELECT avga.artist_name, 
       gt.genre_name, 
	   avga.no_of_albums
FROM average_album avga
LEFT JOIN genre_table gt ON avga.artist_name = gt.name_of_artist
WHERE no_of_albums &gt; (SELECT AVG(no_of_albums)
                      FROM average_album)
GROUP BY artist_name
ORDER BY no_of_albums DESC;

/* What are the number of tracks in each playlists? */
SELECT p.name, 
       p.playlistid, 
	   COUNT(pt.trackid) AS no_of_tracks
FROM playlist p
LEFT JOIN playlisttrack pt ON p.PlaylistId = pt.playlistid
GROUP BY p.name
HAVING COUNT(pt.trackid) &gt; 0
ORDER BY no_of_tracks DESC
LIMIT 5;

/* What is the average song track length per genre? */
SELECT g.name, 
       ROUND((AVG(t.Milliseconds) / 60000),2) AS &quot;Average_track_lenth / min&quot;
FROM track t
LEFT JOIN genre g ON t.genreid = g.genreid
GROUP BY g.name
ORDER BY &quot;Average_track_lenth / min&quot; DESC
LIMIT 10;


/* EMPLOYEE &amp; CUSTOMER DYNAMICS */

/* Number of customers supported by each employee*/
SELECT e.firstname || &quot; &quot; || e.lastname Employee_name, 
       COUNT(c.customerid) no_of_customers
FROM employee e
INNER JOIN customer c ON e.employeeid = c.SupportRepId
GROUP BY employee_name;

/* employees and their managers */
SELECT e1.firstname || &quot; &quot; || e1.lastname employee_name,
       e1.title, 
	   e2.firstname || &quot; &quot; || e2.lastname manager, 
	   e2.title
FROM employee e1
INNER JOIN employee e2 ON e1.reportsto = e2.employeeid
GROUP BY employee_name;

/* Total number of customers supported by each employee*/
SELECT e.firstname || &quot; &quot; || e.lastname Employee_name, 
       CAST(ROUND(SUM(Total)) AS INT) total_amount
FROM employee e
INNER JOIN customer c ON e.employeeid = c.SupportRepId
LEFT JOIN invoice i ON c.customerid = i.customerid
GROUP BY employee_name;


/* SALES &amp; PERFORMANCE METRICS */

/* What are the top performing countries, highlighting their revenue? */
SELECT BillingCountry AS Country, 
       COUNT(invoicelineid) AS no_of_invoices, 
	   CAST(ROUND(SUM(UnitPrice * Quantity),2) AS INT) AS total_amount
FROM Invoice i
LEFT JOIN invoiceline il ON i.invoiceid = il.invoiceid
GROUP BY country
ORDER BY no_of_invoices DESC, total_amount DESC
LIMIT 10;

/* Trends of earnings across years */
SELECT strftime('%Y',InvoiceDate) year, 
       CAST(ROUND(SUM(Total)) AS INT) total_amount
FROM Invoice
GROUP BY year
ORDER BY year, total_amount DESC;

/* What are the genres with the highest number of purchases in each country? */
WITH country_genre_list AS
						  (SELECT i.BillingCountry country_name,
						          g.name genre_name, 
								  g.genreid genre_id, 
								  COUNT(i.invoiceid) purchases,
								  RANK() OVER(PARTITION BY i.billingcountry ORDER BY COUNT(i.invoiceid) DESC) rank_no
						   FROM invoice i
						   LEFT JOIN InvoiceLine il ON i.invoiceid = il.InvoiceId
						   LEFT JOIN track t ON il.trackid = t.TrackId
                           LEFT JOIN genre g ON t.genreid = g.genreid
                           GROUP BY country_name, g.genreid)
						   
SELECT cgl.country_name, 
       cgl.purchases no_of_purchases, 
	   cgl.genre_name, 
	   cgl.genre_id
FROM country_genre_list cgl
WHERE cgl.rank_no = 1
ORDER BY no_of_purchases DESC;

/* MARKETING INITIATIVE PROPOSAL */

/* What are the names of all customers in the USA that listen to rock and their total amount spent on rock purchases? */
WITH rock_id AS 
               (SELECT invoiceid, 
			           COUNT(invoicelineid), 
					   ROUND(SUM(UnitPrice * Quantity),2) AS total_amount_spent
				FROM invoiceline 
				WHERE trackid IN (SELECT trackid 
								  FROM Track
								  WHERE genreid = 1)
				GROUP BY invoiceid)
				
SELECT DISTINCT c.firstname || &quot; &quot; || c.lastname AS Customer_name, 
                c.Email AS Customer_email, 
				ri.total_amount_spent
FROM Invoice i
INNER JOIN rock_id ri ON i.invoiceid = ri.invoiceid
LEFT JOIN Customer c ON i.customerid = c.customerid
WHERE BillingCountry = &quot;USA&quot;
GROUP BY Customer_name
ORDER BY total_amount_spent DESC;

</sql><current_tab id="0"/></tab_sql></sqlb_project>
